# Segurança de Rotas utilizando JsonWebToken (JWT)

----------


Quando desenvolvemos as nossas rotas, não nos preocupamos em protege-las, simplesmente montamos uma rota como http://localhost:3000/api/users/retrieve para listar todos os usuários e depois capturamos a informação retornada por essa rota em alguma tecnologia front-end.
Imagine que você faça um CRUD completo de usuários e que voce utilize ele em seu Front-End utilizando o [Angular-JS](https://angularjs.org/), por exemplo, para trabalhar com essas informações. Até ai mil maravilhas! Mas você já parou pra pensar que você deixou essa rota aberta para qualquer pessoa ter acesso? Qualquer pessoa com um pouco de conhecimento conseguirá acessar essas rotas e Listar, Criar, Alterar e Deletar as informações do banco de dados quando bem entender.

Enfim, chega de lorota e vamos para a parte prática.

Para explicar de forma simples como colocar segurança em suas rotas no [ExpressJS](http://expressjs.com/) utilizando o [ JSON Web Token (JWT)](https://jwt.io/) vou iniciar um projeto com o [Express-Generator](http://expressjs.com/pt-br/starter/generator.html) para gerar a estrutura de arquivos, utilizaremos o [mongoose](http://mongoosejs.com/) para a modelagem de dados e logicamente o [MongoDB](https://www.mongodb.com/) para o armazenamento dos dados.

Primeiro vamos iniciar um projeto utilizando o [Express-Generator](http://expressjs.com/pt-br/starter/generator.html).

> **Antes de iniciar verifique se você tem esses dois packages instalados a nível global**

> - Express-Generator
> - [Nodemon](https://nodemon.io/)

> Caso não tenha esses packages instalados, instale com os comandos abaixo

>**#Windows**
>`npm i -g nodemon express-generator`
>**#Linux**
>`$ sudo npm i nodemon express-generator`

### Criando o projeto utilizando o Express-Generator
Abra o terminal em um diretório de sua preferência (No meu caso */home/catini/Projects*) e execute o comando `express JWT` e automaticamente será criado um diretório com a estrutura pronta para inicarmos nosso projeto.
